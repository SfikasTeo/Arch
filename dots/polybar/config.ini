;==========================================================
;
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;
;
;   To learn more about how to configure Polybar
;   go to https://github.com/polybar/polybar
;
;   The README contains a lot of information
;
;==========================================================

[settings]
screenchange-reload = true
pseudo-transparency = true

[global/wm]

; Adjust the _NET_WM_STRUT_PARTIAL top value
;   Used for top aligned bars
; Supports any percentage with offset relative to the monitor height
margin-bottom = 3

; Adjust the _NET_WM_STRUT_PARTIAL bottom value
;   Used for bottom aligned bars
; Supports any percentage with offset relative to the monitor height
margin-top = 0

include-file  = ~/.config/polybar/colors.ini
include-file  = ~/.config/polybar/modules.ini
include-file  = ~/.config/polybar/system.ini

[bar/main]

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = false

; Use `xrandr -q | grep " connected" | cut -d ' ' -f1` to find Monitors
; If no monitor is given, the primary monitor is used if it exists
monitor =

; Require the monitor to be in connected state
monitor-strict = false

; To allow other windows to be placed above the bar, or to avoid having the bar visible when in fullscreen mode,
; you need to use the following two parameters. Note that it will stop the WM to allocate the space of polybar.
override-redirect = false

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
wm-restack = bspwm

;	=============== Bar parameters ===============

; Width and height of the bar window.
; Supports any percentage with offset or an extent value.
; For 'width', the percentage is relative to the monitor width and for 'height'
; relative to the monitor height
width  = 100%
height = 24pt

; Padding (number of spaces, pixels, or points) to add at the beginning/end of
; the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 1

; Value used for drawing rounded corners
; For this to work you may also need to enable pseudo-transparency or use a
; compositor like picom.
; Individual values can be defined using:
;   radius-{top,bottom}
; or
;   radius-{top,bottom}-{left,right} (New in version 3.6.0)
; Polybar always uses the most specific radius definition for each corner.
radius = 0.0

;	=============== Bar Location ===============

; Put the bar at the bottom of the screen
bottom = false

; Offset the bar window in the x and/or y direction.
offset-x = 0
offset-y = 0

;	=============== Bar Underline ===============

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size  = 3pt
line-color = ${colors.background-alt}

;	=============== Colors ===============

background = ${colors.background}
foreground = ${colors.foreground}

;	=============== Borders ===============

#border-size  = 
#border-color = 

;	=============== Fonts ===============
font-0 = Fira Code:style=Regular

;	=============== Cursor ===============

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling

#cursor-click  = pointer
#cursor-scroll = ns-resize

;	=============== Modules ===============

; Margin (number of spaces, pixels, or points) to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = 1

; Prefer fixed center position for the `modules-center` block.
; When false, the center block is centered in the space between 
; the left and right block.
fixed-center = true

; The separator will be inserted between the output of each module
; This has the same properties as a label
#separator = |
#separator-foreground = ${colors.disabled}

;	Module blocks
modules-left   = 
modules-center = date 
modules-right  = 

;	=============== Tray ===============

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
#tray-position =

; If true, the bar will not shift its
; contents when the tray changes
#tray-detached = false

; Tray icon max size
#tray-maxsize = 16

; @deprecated Since 3.3.0 the tray always uses pseudo-transparency
; Enable pseudo transparency
; Will automatically be enabled if a fully transparent
; background color is defined using `tray-background`
#tray-transparent = false

; Background color for the tray container 
; ARGB color (e.g. #f00, #ff992a, #ddff1023)
; By default the tray container will use the bar
; background color.
#tray-background = ${root.background}

; Foreground color for the tray icons
; This only gives a hint to the tray icon for its color, it will probably only
; work for GTK3 icons (if at all) because it targets a non-standard part of the
; system tray protocol by setting the _NET_SYSTEM_TRAY_COLORS atom on the tray
; window.
; New in version 3.6.0
#tray-foreground = ${root.foreground}

; Offset the tray in the x and/or y direction
; Supports any percentage with offset
; Percentages are relative to the monitor width or height for detached trays
; and relative to the bar window (without borders) for non-detached tray.
#tray-offset-x = 0
#tray-offset-y = 0

; Pad the sides of each tray icon
#tray-padding = 0

; Scale factor for tray clients
#tray-scale = 1.0

